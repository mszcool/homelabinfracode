---
- name: Gather facts about LVM configuration
  ansible.builtin.setup:
    gather_subset:
      - hardware
  register: system_facts

- name: Check volume group existence
  community.general.lvg:
    vg: "{{ param_volume_group_name }}"
    state: present
  check_mode: true
  register: vg_check
  failed_when: false
  changed_when: false

- name: Fail if volume group does not exist
  ansible.builtin.fail:
    msg: "Volume group {{ param_volume_group_name }} does not exist."
  when: vg_check is failed

- name: Get the disk configuration for the current host.
  ansible.builtin.set_fact:
    selected_disk_config: "{{ param_volume_disk_configs | selectattr('name', 'equalto', param_host_disk_config_name) | list | first | default({}) }}"
  failed_when: selected_disk_config is not defined or selected_disk_config is empty

- name: Now validate if all LVM volumes defined in the disk config are present on the target machine.
  community.general.lvol:
    vg: "{{ param_volume_group_name }}"
    lv: "{{ item.name }}"
    state: present
  check_mode: true
  register: lv_check
  loop: "{{ selected_disk_config.volume_group_volumes | dict2items }}"

- name: Check if any logical volumes would require changes
  ansible.builtin.set_fact:
    lvm_changes_required: "{{ lv_check.results | selectattr('changed', 'equalto', true) | list | length > 0 }}"

- name: Display LVM validation results
  ansible.builtin.debug:
    msg: "{{ 'LVM configuration does not match!' if lvm_changes_required else 'LVM as expected!' }}"

- name: Fail if LVM changes are required
  ansible.builtin.fail:
    msg: "Invalid LVM configuration on target host"
  when: lvm_changes_required | bool
