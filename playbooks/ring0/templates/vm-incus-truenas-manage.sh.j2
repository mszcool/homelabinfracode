#!/bin/bash
# TrueNAS Scale VM Management Script
# Generated by Ansible for VM: {{ truenas_vm_name }}

VM_NAME="{{ truenas_vm_name }}"
VM_IP="{% if vm_ip_result.stdout is defined and vm_ip_result.stdout != '' %}{{ vm_ip_result.stdout }}{% else %}N/A{% endif %}"

show_help() {
    cat << EOF
TrueNAS Scale VM Management Script for: $VM_NAME

Usage: $0 [COMMAND]

Commands:
    start       Start the TrueNAS VM
    stop        Stop the TrueNAS VM
    restart     Restart the TrueNAS VM
    status      Show VM status and information
    console     Connect to VM console (use Ctrl+a q to exit)
    shell       Open shell inside the VM (if available)
    ip          Show current VM IP address
    logs        Show VM logs
    backup      Create VM backup
    remove-iso  Remove installation ISO after successful install
    help        Show this help message

VM Configuration:
    Name: $VM_NAME
    CPU Cores: {{ truenas_cpu_cores }}
    Memory: {{ truenas_memory_gb }}GB
    System Disk: {{ truenas_system_disk_gb }}GB
    Network: {{ truenas_network_bridge }}
    {% if pcie_passthrough_enabled %}PCIe Controller: {{ pcie_controller_id }}{% endif %}

EOF
}

get_vm_ip() {
    incus info "$VM_NAME" | grep -E "eth0.*inet" | awk '{print $3}' | head -1
}

case "$1" in
    start)
        echo "Starting TrueNAS VM: $VM_NAME"
        incus start "$VM_NAME"
        ;;
    stop)
        echo "Stopping TrueNAS VM: $VM_NAME"
        incus stop "$VM_NAME"
        ;;
    restart)
        echo "Restarting TrueNAS VM: $VM_NAME"
        incus restart "$VM_NAME"
        ;;
    status)
        echo "=== TrueNAS VM Status ==="
        incus info "$VM_NAME"
        echo ""
        echo "=== Network Information ==="
        VM_IP=$(get_vm_ip)
        if [ -n "$VM_IP" ]; then
            echo "VM IP Address: $VM_IP"
            echo "TrueNAS Web Interface: http://$VM_IP"
        else
            echo "VM IP Address: Not available"
        fi
        ;;
    console)
        echo "Connecting to TrueNAS VM console (use Ctrl+a q to exit)"
        incus console "$VM_NAME"
        ;;
    shell)
        echo "Opening shell in TrueNAS VM"
        incus exec "$VM_NAME" -- /bin/bash
        ;;
    ip)
        VM_IP=$(get_vm_ip)
        if [ -n "$VM_IP" ]; then
            echo "VM IP Address: $VM_IP"
            echo "TrueNAS Web Interface: http://$VM_IP"
        else
            echo "VM IP Address: Not available"
        fi
        ;;
    logs)
        echo "=== TrueNAS VM Logs ==="
        incus info "$VM_NAME" --show-log
        ;;
    backup)
        BACKUP_NAME="${VM_NAME}-backup-$(date +%Y%m%d-%H%M%S)"
        echo "Creating backup: $BACKUP_NAME"
        incus copy "$VM_NAME" "$BACKUP_NAME"
        echo "Backup created: $BACKUP_NAME"
        ;;
    remove-iso)
        echo "Removing installation ISO from TrueNAS VM"
        incus config device remove "$VM_NAME" install-media
        echo "Installation ISO removed"
        ;;
    help|--help|-h)
        show_help
        ;;
    *)
        echo "Unknown command: $1"
        echo "Use '$0 help' for usage information"
        exit 1
        ;;
esac
