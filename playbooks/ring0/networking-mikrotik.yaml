---
- name: Networking setup for devices (DNS names, static address assignments etc.) for Mikrotik.
  hosts: localhost
  become: false
  gather_facts: false

  vars:
    param_router_time_zone: "{{ timezone }}"
    param_firewall_rule_groups: "{{ firewall_rules }}"
    param_root_user_name: "{{ users.root.name }}"
    param_root_user_password_env: "{{ users.root.password_env }}"
    param_root_user_ssh_pub_key: "{{ users.root.ssh_key }}"
    param_automation_user_name: "{{ users.automation.name }}"
    param_automation_user_password_env: "{{ users.automation.password_env }}"
    param_automation_user_ssh_pub_key: "{{ users.automation.ssh_key }}"
    param_router_name: "{{ hostsConfig['10.10.0.1'].hostname }}"
    param_wan_interface_list: "{{ hostsConfig['10.10.0.1'].wan_interface_list }}"
    param_lan_interface_list: "{{ hostsConfig['10.10.0.1'].lan_interface_list }}"
    param_loopback_interface_name: "{{ hostsConfig['10.10.0.1'].loopback_interface_name }}"
    param_wan_interface_name: "{{ hostsConfig['10.10.0.1'].wan_interface.interface }}"
    param_lan_interface_bridge_name: "{{ hostsConfig['10.10.0.1'].lan_interface.bridge }}"
    param_lan_interface_members: "{{ hostsConfig['10.10.0.1'].lan_interface.interface }}"
    param_lan_interface_bridge_ip_address: "{{ hostsConfig['10.10.0.1'].lan_interface.ipaddr }}"
    param_end_marker_text: "END-OF-BLOCK"

  tasks:
    - name: Get the current user running the playbook
      ansible.builtin.set_fact:
        current_user: "{{ lookup('env', 'USER') }}"

    - name: Set the script file name
      ansible.builtin.set_fact:
        param_script_file_name: "{{ param_router_name }}-bootstrap-script.rsc"

    - name: Check if the environment variable with the value from root_password is set
      ansible.builtin.assert:
        that:
          - lookup('env', item)
        fail_msg: "Please set the {{ item }} environment variable before executing this playbook!"
      loop:
        - "{{ param_root_user_password_env }}"
        - "{{ param_automation_user_password_env }}"

    - name: Get the password from the environment variable
      ansible.builtin.set_fact:
        param_root_user_password: "{{ lookup('env', param_root_user_password_env) }}"
        param_automation_user_password: "{{ lookup('env', param_automation_user_password_env) }}"

    - name: Create Mikrotik bootstrap script file. Copy this on your RouterOS target and execute there without any changes!
      ansible.builtin.template:
        src: networking-templates/mikrotik-main-default.rsc.j2
        dest: "/home/{{ current_user }}/{{ param_script_file_name }}"
        mode: "0644"
