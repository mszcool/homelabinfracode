---
- name: Ensure k3s pre-requisites are met
  import_playbook: ../all-base/bootstrap-machines.yaml

- name: Install k3s on master
  hosts: "{{ master_hosts }}"
  become: true
  gather_facts: false
  remote_user: "{{ lookup('env', 'USE_SSH_USER_NAME') }}"

  # These variables should be overridden through the --extra-vars argument of ansible-playbook
  vars:
    master_hosts: k3smaster
    force_install: false
    cluster_config: "../configs/k3s-cluster-config.yaml"

  # First, ensure the pre-requisites are met
  pre_tasks:
    # First, make sure the environment variable for SSH access to the nodes is present.
    - include_tasks: ../../tasklib/checkuserenv-tasks.yaml

  tasks:
    - name: Include k3s configuration variables
      include_vars: "{{ cluster_config }}"

    - name: Check if k3s is already installed
      command: command -v k3s
      register: k3s_installed
      changed_when: false
      failed_when: false

    - name: Get installed k3s version
      command: k3s --version
      register: installed_version
      changed_when: false
      failed_when: false
      when: k3s_installed.rc == 0

    - name: Download k3s installer
      get_url:
        url: https://get.k3s.io
        dest: /tmp/k3s_install.sh
        mode: '0755'

    - name: Install k3s master
      command:
        cmd: "/tmp/k3s_install.sh --advertise-address {{ inventory_hostname }}"
      environment:
        INSTALL_K3S_VERSION: "{{ k3s_version }}"
        K3S_CLUSTER_CIDR: "{{ pod_network_cidr }}"
        K3S_CNI: "{{ pod_network_plug_in }}"
      when: k3s_installed.rc != 0 or kubernetes_version not in installed_version.stdout or force_install == true

    - name: Get Node Token
      command:
        cmd: cat /var/lib/rancher/k3s/server/node-token
      register: master_node_token
      changed_when: false

    - name: Get kubeconfig
      command: cat /etc/rancher/k3s/k3s.yaml
      register: kubeconfig

    - name: Copy kubeconfig to local machine
      copy:
        content: "{{ kubeconfig.stdout }}"
        dest: "{{ lookup('env','HOME') }}/k3s_kubeconfig.yaml"
        mode: '0755'
      delegate_to: localhost

    - name: Update kubeconfig file
      delegate_to: localhost
      lineinfile:
        path: "{{ lookup('env','HOME') }}/k3s_kubeconfig.yaml"
        regexp: '^\s*server: https://127.0.0.1:6443'
        line: "    server: {{ k3s_master_url }}"

- name: Install k3s on agent nodes
  hosts: "{{ agent_hosts }}"
  become: true
  gather_facts: false
  remote_user: "{{ lookup('env', 'USE_SSH_USER_NAME') }}"

  # These variables should be overridden through the --extra-vars argument of ansible-playbook
  vars:
    agent_hosts: k3sagents
    force_install: false
    cluster_config: "../configs/k3s-cluster-config.yaml"

  # First, ensure the pre-requisites are met
  pre_tasks:
    # First, make sure the environment variable for SSH access to the nodes is present.
    - include_tasks: ../tasklib/checkuserenv-tasks.yaml

  tasks:
    - name: Include k3s configuration variables
      include_vars: "{{ cluster_config }}"

    - name: Check if k3s is already installed
      command: command -v k3s
      register: k3s_installed
      changed_when: false
      failed_when: false

    - name: Get installed k3s version
      command: k3s --version
      register: installed_version
      changed_when: false
      failed_when: false
      when: k3s_installed.rc == 0

    - name: Download k3s installer
      get_url:
        url: https://get.k3s.io
        dest: /tmp/k3s_install.sh
        mode: '0755'

    - name: Install k3s on agent nodes
      command:
        cmd: "/tmp/k3s_install.sh"
      environment:
        INSTALL_K3S_VERSION: "{{ k3s_version }}"
        K3S_URL: "{{ k3s_master_url }}"
        K3S_TOKEN: "{{ hostvars[groups[master_hosts][0]].master_node_token.stdout }}"
        K3S_CNI: "{{ pod_network_plug_in }}"
      when: k3s_installed.rc != 0 or kubernetes_version not in installed_version.stdout or force_install == true
      
    - name: Ensure k3s service is running
      systemd:
        name: k3s-agent.service
        state: started
