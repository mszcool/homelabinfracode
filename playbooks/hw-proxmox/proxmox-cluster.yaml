---
- name: Configure Proxmox Cluster
  hosts: "{{ proxmox_nodes }}"
  become: true
  gather_facts: false

  # Ensure that the needed API USER password is set. 
  assert:
    that:
      - "{{ lookup('env','USE_PROXMOX_API_USER_PWD') }}"
    fail_msg: "Please set the USE_PROXMOX_API_USER_PWD environment variable before executing this playbook!"

  # These variables should be overriden through the --extra-vars argument of ansible-playbook
  vars:
    proxmox_nodes:
      - node1
      - node2
      - node3
    proxmox_api_user: root@pam
    proxmox_api_password: "{{ lookup('env', 'USE_PROXMOX_API_USER_PWD') }}"

  # Main execution tasks
  tasks:
    - name: Use community repositories for apt-get
      community.general.proxmox:
        api_user: "{{ proxmox_api_user }}"
        api_password: "{{  }}"
        api_host: 10.0.1.250
        node: "{{ inventory_hostname }}"
        proxmox_default_behavior: false
        proxmox_repo: community
      delegate_to: localhost

    - name: Add nodes to the same Proxmox cluster
      community.general.proxmox:
        api_user: root@pam
        api_password: YourRootPassword
        api_host: 10.0.1.250
        node: "{{ inventory_hostname }}"
        hostname: "{{ inventory_hostname }}"
        password: YourRootPassword
        state: present
      delegate_to: localhost

    - name: Disable SSH access for root
      ansible.builtin.shell:
        cmd: "sed -i 's/^PermitRootLogin yes/PermitRootLogin no/' /etc/ssh/sshd_config"
      delegate_to: "{{ inventory_hostname }}"

    - name: Set the same SSH public key for root on all nodes
      ansible.builtin.copy:
        content: "{{ lookup('file', '/path/to/your/public_key.pub') }}"
        dest: /root/.ssh/authorized_keys
        mode: '0600'
      delegate_to: "{{ inventory_hostname }}"

    - name: Create an API key for VM and LXC management
      community.general.proxmox:
        api_user: root@pam
        api_password: YourRootPassword
        api_host: 10.0.1.250
        node: "{{ inventory_hostname }}"
        api_token_name: ansible_api_key
        api_token_privs: "VM.Allocate,VM.Config.Disk,VM.Config.CPU,VM.Config.Memory,VM.Config.Network,VM.Config.Options,VM.Config.Snapshot,VM.Audit,VM.Console,VM.Monitor,VM.PowerMgmt,VM.Snapshot,VM.Snapshot.Audit,VM.Snapshot.Check,VM.Snapshot.Clone,VM.Snapshot.Create,VM.Snapshot.Delete,VM.Snapshot.Rollback,VM.Snapshot.Undo,VM.Snapshot.VmState,VM.Snapshot.VmState.Audit,VM.Snapshot.VmState.Check,VM.Snapshot.VmState.Clone,VM.Snapshot.VmState.Create,VM.Snapshot.VmState.Delete,VM.Snapshot.VmState.Rollback,VM.Snapshot.VmState.Undo,VM.Snapshot.VmState.VmState,VM.Snapshot.VmState.VmState.Audit,VM.Snapshot.VmState.VmState.Check,VM.Snapshot.VmState.VmState.Clone,VM.Snapshot.VmState.VmState.Create,VM.Snapshot.VmState.VmState.Delete,VM.Snapshot.VmState.VmState.Rollback,VM.Snapshot.VmState.VmState.Undo,VM.Snapshot.VmState.VmState.VmState,VM.Snapshot.VmState.VmState.VmState.Audit,VM.Snapshot.VmState.VmState.VmState.Check,VM.Snapshot.VmState.VmState.VmState.Clone,VM.Snapshot.VmState.VmState.VmState.Create,VM.Snapshot.VmState.VmState.VmState.Delete,VM.Snapshot.VmState.VmState.VmState.Rollback,VM.Snapshot.VmState.VmState.VmState.Undo,VM.Snapshot.VmState.VmState.VmState.VmState,VM.Snapshot.VmState.VmState.VmState.VmState.Audit,VM.Snapshot.VmState.VmState.VmState.VmState.Check,VM.Snapshot.VmState.VmState.VmState.VmState.Clone,VM.Snapshot.VmState.VmState.VmState.VmState.Create,VM.Snapshot.VmState.VmState.VmState.V