---
- name: Setup Proxmox Disks for my servers. They have either 1 large disk or 1 small and one large disk.
  hosts: all
  become: true

  vars:
    volume_group_name: pve
    volume_group_name_vmdisk: pve-main
    lvm_proxmox_device: /dev/sda
    lvm_proxmox_partition_nr: 3       # Partition for the root LVM pool sits, for single disk scenarios the same as for LVM thin pool.
    lvm_proxmox_partition: "{{ lvm_proxmox_device }}{{ lvm_proxmox_partition_nr }}"
    lvm_vmdisks_device: /dev/sda
    lvm_vmdisks_partition_nr: 4  # Partition for the LVM-Thin pool defaults to the same as the regular LVM pool in default Proxmox setup.
    lvm_vmdisks_partition: "{{ lvm_vmdisks_device }}{{ lvm_vmdisks_partition_nr }}"
    lvm_vmdisks_dirname: msz-vmdisks
    lvm_vmdisks_dirname_old: local-lvm
    lvm_vmdisks_pool_name: msz-main
    lvm_vmdisks_pool_name_old: data

  tasks:
    - name: Ensure parted is installed on the target system
      ansible.builtin.apt:
        name: parted
        state: present
        update_cache: true

    - name: First, make sure the full space of the disk is available using parted.
      community.general.parted:
        resize: true
        part_end: 100%
        number: "{{ lvm_proxmox_partition_nr }}"
        device: "{{ lvm_proxmox_device }}"

    - name: Check if the LVM-Thin pool already exists with the specified name
      ansible.builtin.command:
        cmd: "lvs --noheadings -o lv_name --select lv_name={{ lvm_vmdisks_pool_name_old }}"
      register: lv_thin_exists
      changed_when: false
      failed_when: lv_thin_exists.rc not in [0, 1]

    - name: Remove spaces from the fact with the found LVM-Thin pool
      ansible.builtin.set_fact:
        lv_thin_exists: "{{ lv_thin_exists.stdout | trim }}"

    - name: If the LVM-Thin pool exists, remove Proxmox storage configuration for the LVM-Thin pool
      ansible.builtin.command:
        cmd: "pvesm remove {{ lvm_vmdisks_dirname_old }}"
      when: lv_thin_exists != ""
      changed_when: false

    - name: Delete existing LVM-Thin pool if it doesn't match the specified name
      ansible.builtin.command:
        cmd: "lvremove -f {{ volume_group_name }}/{{ lvm_vmdisks_pool_name_old }}"
      when: lv_thin_exists != ""
      changed_when: false

    - name: Check current physical volume size
      ansible.builtin.command:
        cmd: "pvs --noheadings -o pv_size --units B {{ lvm_proxmox_partition }}"
      register: current_pv_size
      changed_when: false

    - name: Check maximum physical volume size
      ansible.builtin.command:
        cmd: "pvs --noheadings -o pv_free --units B {{ lvm_proxmox_partition }}"
      register: max_pv_size
      changed_when: false

    - name: Extend physical volume on for the root partition.
      ansible.builtin.command:
        cmd: "pvresize {{ lvm_proxmox_partition }}"
      when: (current_pv_size.stdout | regex_replace('B', '') | int) < (max_pv_size.stdout | regex_replace('B', '') | int)
      changed_when: false

    - name: Check current root volume size
      ansible.builtin.command:
        cmd: "lvs --noheadings -o lv_size --units B {{ volume_group_name }}/root"
      register: current_lv_size
      changed_when: false

    - name: Check maximum root volume size
      ansible.builtin.command:
        cmd: "vgs --noheadings -o vg_free --units B {{ volume_group_name }}"
      register: max_lv_size
      changed_when: false

    - name: Extend the root volume after successfully extended the partition.
      community.general.lvol:
        vg: "{{ volume_group_name }}"
        lv: "root"
        size: "+100%FREE"
        resizefs: true
      when: (current_lv_size.stdout | regex_replace('B', '') | int) < (max_lv_size.stdout | regex_replace('B', '') | int)
      changed_when: false

    - name: Check if the LVM-Thin pool with the new target name already exists
      ansible.builtin.command:
        cmd: "lvs --noheadings -o lv_name --select lv_name={{ lvm_vmdisks_pool_name }}"
      register: lv_thin_new_exists
      changed_when: false
      failed_when: lv_thin_new_exists.rc not in [0, 1]

    - name: Remove spaces from the fact with the found LVM-Thin pool
      ansible.builtin.set_fact:
        lv_thin_new_exists: "{{ lv_thin_new_exists.stdout | trim }}"

    - name: Check if the target partition for the thin-pool exists
      ansible.builtin.stat:
        path: "{{ lvm_vmdisks_partition }}"
      register: partition_stat

    - name: Get partition information before creating new partition
      ansible.builtin.command:
        cmd: "parted -m {{ lvm_vmdisks_device }} unit MiB --json print"
      register: parted_output
      when: not partition_stat.stat.exists
      changed_when: false

    - name: Parse end of the last partition before creating new partition
      ansible.builtin.set_fact:
        last_partition_end: >-
          {{
            (parted_output.stdout | from_json).disk.partitions
            | max(attribute='number')
            | json_query('end')
          }}
      when: not partition_stat.stat.exists

    - name: Increment the end of the last partition before creating the new one by 1
      ansible.builtin.set_fact:
        new_partition_begin: >
          {{
            (last_partition_end | regex_search('([0-9]+)') | int + 1)
            | string
            + (last_partition_end | regex_search('([A-Za-z]+)'))
          }}
      when: not partition_stat.stat.exists

    - name: Create the LVM-Thin pool partition if it doesn't exist
      community.general.parted:
        state: present
        device: "{{ lvm_vmdisks_device }}"
        number: "{{ lvm_vmdisks_partition_nr }}"
        label: gpt
        part_start: "{{ new_partition_begin }}"
        part_end: "100%"
      when: not partition_stat.stat.exists
      changed_when: false

    - name: Create physical volume if the partition did not exist.
      ansible.builtin.command:
        cmd: "pvcreate {{ lvm_vmdisks_partition }}"
      when: not partition_stat.stat.exists
      changed_when: false

    - name: Create the volume group if it does not exist.
      community.general.lvg:
        vg: "{{ volume_group_name_vmdisk }}"
        pvs: "{{ lvm_vmdisks_partition }}"
        pvresize: true
        state: present
      when: not partition_stat.stat.exists

    - name: Create LVM-Thin pool with remaining space
      community.general.lvol:
        vg: "{{ volume_group_name_vmdisk }}"
        thinpool: "{{ lvm_vmdisks_pool_name }}"
        pvs: "{{ lvm_vmdisks_partition }}"
        size: "+100%FREE"
        resizefs: true
        state: present
      when: lv_thin_new_exists == ""
      changed_when: false

    - name: Create the Proxmox Storage configuration for the LVM-Thin pool
      ansible.builtin.command:
        cmd: "pvesm add lvmthin {{ lvm_vmdisks_dirname }} --vgname {{ volume_group_name_vmdisk }} --thinpool {{ lvm_vmdisks_pool_name }}"
      when: lv_thin_new_exists == ""
      changed_when: false
