Vagrant.configure("2") do |config|

  # Note: this is for Hyper-V on Windows, hence the gsub() replacing back-sslashes
  ssh_key_path = File.join(ENV['USERPROFILE'].gsub("\\","/"), ".ssh/id_rsa.pub")

  # Ubuntu 22.04 box for Hyper-V
  config.vm.box = "generic/ubuntu2204"
  config.vm.box_url = "https://app.vagrantup.com/generic/boxes/ubuntu2204/versions/4.2.14/providers/hyperv.box"
  config.vm.disk :disk, name: "osdisk", size: "30GB"
  config.ssh.insert_key = false

  # Set the amount of RAM to 8GB
  config.vm.provider "hyperv" do |hv|
    hv.memory = 4096
    hv.maxmemory = 8192
    hv.enable_virtualization_extensions = true
  end

  # Provision the three virtual machines for the cluster
  (1..3).each do |i|
    config.vm.define "lxlab-#{i}" do |vmi|
      vmi.vm.hostname = "lxlab-#{i}"
      vmi.vm.provision "file", source: ssh_key_path, destination: "/home/vagrant/id_rsa.pub"

      # Use the default network switch
      # Unfortunately the below configuration does not work with HyperV, yet
      vmi.vm.network "public_network", bridge: "Default Switch"
      vmi.vm.network "public_network", bridge: "Private Switch"

      # Update the OS after provisioning
      vmi.vm.provision "shell", inline: <<-SHELL
        sudo apt update
        sudo apt upgrade -y
        #sudo ip addr add 192.168.55.#{3 + 1}/24 dev eth1
        cat /home/vagrant/id_rsa.pub >> /home/vagrant/.ssh/authorized_keys
        chown vagrant:vagrant /home/vagrant/.ssh/authorized_keys
        chmod 0600 /home/vagrant/.ssh/authorized_keys
      SHELL
    end
  end

end